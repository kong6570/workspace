<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.up366.auth.db.dao.PositionMapper">
  <resultMap id="BaseResultMap" type="com.up366.auth.db.pojo.Position">
    <id column="pst_id" jdbcType="INTEGER" property="pstId" />
    <result column="pst_name" jdbcType="VARCHAR" property="pstName" />
    <result column="org_id" jdbcType="INTEGER" property="orgId" />
    <result column="display_order" jdbcType="INTEGER" property="displayOrder" />
    <result column="pst_desc" jdbcType="VARCHAR" property="pstDesc" />
    <result column="pst_def_id" jdbcType="INTEGER" property="pstDefId" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
  </resultMap>
  <sql id="Base_Column_List">
    pst_id, pst_name, org_id, display_order, pst_desc, pst_def_id, user_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from adm_positions
    where pst_id = #{pstId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from adm_positions
    where pst_id = #{pstId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.up366.auth.db.pojo.Position">
    insert into adm_positions (pst_id, pst_name, org_id, 
      display_order, pst_desc, pst_def_id, 
      user_type)
    values (#{pstId,jdbcType=INTEGER}, #{pstName,jdbcType=VARCHAR}, #{orgId,jdbcType=INTEGER}, 
      #{displayOrder,jdbcType=INTEGER}, #{pstDesc,jdbcType=VARCHAR}, #{pstDefId,jdbcType=INTEGER}, 
      #{userType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.up366.auth.db.pojo.Position">
    insert into adm_positions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pstId != null">
        pst_id,
      </if>
      <if test="pstName != null">
        pst_name,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="displayOrder != null">
        display_order,
      </if>
      <if test="pstDesc != null">
        pst_desc,
      </if>
      <if test="pstDefId != null">
        pst_def_id,
      </if>
      <if test="userType != null">
        user_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pstId != null">
        #{pstId,jdbcType=INTEGER},
      </if>
      <if test="pstName != null">
        #{pstName,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="displayOrder != null">
        #{displayOrder,jdbcType=INTEGER},
      </if>
      <if test="pstDesc != null">
        #{pstDesc,jdbcType=VARCHAR},
      </if>
      <if test="pstDefId != null">
        #{pstDefId,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.up366.auth.db.pojo.Position">
    update adm_positions
    <set>
      <if test="pstName != null">
        pst_name = #{pstName,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="displayOrder != null">
        display_order = #{displayOrder,jdbcType=INTEGER},
      </if>
      <if test="pstDesc != null">
        pst_desc = #{pstDesc,jdbcType=VARCHAR},
      </if>
      <if test="pstDefId != null">
        pst_def_id = #{pstDefId,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
    </set>
    where pst_id = #{pstId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.up366.auth.db.pojo.Position">
    update adm_positions
    set pst_name = #{pstName,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=INTEGER},
      display_order = #{displayOrder,jdbcType=INTEGER},
      pst_desc = #{pstDesc,jdbcType=VARCHAR},
      pst_def_id = #{pstDefId,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=INTEGER}
    where pst_id = #{pstId,jdbcType=INTEGER}
  </update>
  <!-- 
	remark:根据机构的Id 获得该机构下的所有岗位
	author:赵云慧
	date:2016-1-25 13:47:02
  -->
  <select id="getPositionListByOrgId" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List" />
    from adm_positions where  org_id = #{orgId,jdbcType=INTEGER} ORDER BY display_order
  </select>
  
  
  <!-- 
  	author:denglinfan
  	date:2016/1/23 17:27
  	remark:根据机构id查询当前机构下面所有的岗位的信息
   -->
   <select id="findPositionByOrgId" parameterType="map" resultMap="BaseResultMap">
   	select <include refid="Base_Column_List" /> from adm_positions
   	where org_id = #{orgId,jdbcType=INTEGER}
   	<if test="userId != null">
   		and user_type = (select user_type from adm_users where user_id = #{userId,jdbcType=INTEGER})
   	</if>   	
   </select>
   
   <delete id="deleteByOrgId" parameterType="java.lang.Integer">
    delete from adm_positions
    where org_id = #{_parameter,jdbcType=INTEGER}
  </delete>
  
    <!-- 
	remark:更新预设岗位信息至岗位表
	author:赵云慧
	date：2016-1-28 11:05:06
  -->
  <update id="updateByPstDefId">
  	 update  adm_positions a
		INNER JOIN adm_positions_def b 
		on a.pst_def_id=b.pst_def_id
		set a.pst_name=b.pst_def_name ,  a.display_order=b.diaplay_order , a.pst_desc=b.pst_def_desc  , a.user_type=b.user_type
		where a.pst_def_id=#{pstDefId,jdbcType=INTEGER}
  </update>
   
</mapper>